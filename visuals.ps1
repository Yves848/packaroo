# D√©finition d'une table de caract√®res pour le dessin de cadres
$Script:BoxChars = @{
    "HLine"             = "‚îÄ"  # Ligne horizontale simple
    "VLine"             = "‚îÇ"  # Ligne verticale simple
    "TopLeft"           = "‚ï≠" # Coin sup√©rieur gauche arrondi
    "TopRight"          = "‚ïÆ" # Coin sup√©rieur droit arrondi
    "BottomLeft"        = "‚ï∞" # Coin inf√©rieur gauche arrondi
    "BottomRight"       = "‚ïØ" # Coin inf√©rieur droit arrondi

    # Lignes doubles (utile pour encadrements plus marqu√©s)
    "HLineDouble"       = "‚ïê"
    "VLineDouble"       = "‚ïë"
    "TopLeftDouble"     = "‚ïî"
    "TopRightDouble"    = "‚ïó"
    "BottomLeftDouble"  = "‚ïö"
    "BottomRightDouble" = "‚ïù"

    # Connexions simples
    "TLeft"             = "‚îú"   # T vers la gauche
    "TRight"            = "‚î§"  # T vers la droite
    "TTop"              = "‚î¨"    # T vers le haut
    "TBottom"           = "‚î¥" # T vers le bas
    "Cross"             = "‚îº"   # Croisement en plus

    # Connexions doubles
    "TLeftDouble"       = "‚ï†"
    "TRightDouble"      = "‚ï£"
    "TTopDouble"        = "‚ï¶"
    "TBottomDouble"     = "‚ï©"
    "CrossDouble"       = "‚ï¨"
}

$Script:checked = "‚ñí"
$Script:update = "üì¶"
$Script:remove = "‚ôªÔ∏è"
$Script:updateAvailable = "Ôêú"


function renderVisual {
    param (
        [int]$y,
        [int]$x,
        [string]$content
    )
    $content -Split "`r`n" | ForEach-Object {
        [console]::SetCursorPosition($x, $y)
        [Console]::Write($_)
        $y++
    }
}

class Modal {
    [hashtable]$TL
    [int]$W
    [int]$H
    [string]$title
    [string]$borderColor

    Modal(
        [hashtable]$TopLeft,
        [int]$Width,
        [int]$height,
        [string]$title = "",
        [string]$borderColor = "Text"
    ) {
        $this.TL = $TopLeft
        $this.W = $Width
        $this.H = $height
        $this.title = $title
        $this.borderColor = $borderColor
    }

    Center() {
        $this.TL.X = ($script:width - $this.W) / 2
        $this.TL.Y = ($script:height - $this.h) /2 
    }

    ShowModal() {
        $content = "" | Format-SpectrePanel -Width $this.w -Border "Rounded" -Height $this.h | Out-SpectreHost
        renderVisual -y $this.tl.y -x $this.TL.x -content $content
    }

    print([int]$x, [int]$y, [string]$text) {
        $x1 = ($this.tl.x+1)+$x
        $y1 = ($this.tl.y+1)+$y
        [console]::SetCursorPosition($x1,$y1)
        [console]::Write("$($text) ## $($x1) $($y1)")
    }
}